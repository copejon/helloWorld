#! /bin/bash

# Common, required env vars
set -a
CLUSTER_ID='jcope-e2e'
KUBECONFIG="$HOME/.kube/config"
NUM_NODES=3
GCE_PROJECT="$(gcloud config get-value project 2>/dev/null)"
GCE_ZONE="$(gcloud config get-value zone 2>/dev/null)"
ALLOW_PRIVILEGED=true
ALLOW_SECURITY_CONTEXT=false
set +a

function _gce-set {
	local DISTRO=$1

	case $DISTRO in 
		"debian"|"gci")
			;;
		*)
			echo "Unrecognized OS: $DISTRO"
			return 1
	esac

	set -a
	KUBE_NODE_OS_DISTRIBUTION="$DISTRO"	 
	KUBERNETES_PROVIDER="gce"		 
	KUBE_GCE_INSTANCE_PREFIX="$CLUSTER_ID-$DISTRO"
	KUBE_GCE_NETWORK="$CLUSTER_ID-$DISTRO"
	set +a
	echo "================= GCE Env Vars" 
	echo "Distro		= $DISTRO"
	echo "KubeConfig	= $KUBECONFIG"
	echo "Provier		= $KUBERNETES_PROVIDER"
	echo "Number of Nodes	= $NUM_NODES"
	echo "Instance Prefix	= $KUBE_GCE_INSTANCE_PREFIX"
	echo "GCE Network	= $KUBE_GCE_NETWORK"
}

function _gke-set {
	echo "Setting GKE"
	set -a
 	KUBERNETES_PROVIDER="gke"
	CLUSTER_NAME=$CLUSTER_ID	 
	KUBE_GKE_NETWORK=$CLUSTER_ID	 
	set +a
	echo "================= GKE Env Vars"
	echo "Provider 		= $KUBERNETES_PROVIDER"
	echo "Cluster Name	= $CLUSTER_NAME"
	echo "GKE Network	= $KUBE_GKE_NETWORK"
	echo "Number of Nodes	= $NUM_NODES"
}

# Default OS=debian
function gce-do {

	NODE_DISTRO="debian"
	KUBE_DO=""

	while :; do
		case $1 in
			-gci|--gci)
				NODE_DISTRO="gci"
				;;
			"up"|"down")
				KUBE_DO=$1
				;;
			?*) #Invalid opt
				echo "Unrecognized option: $1"
				return
				;;
			*) #End of opts
				break
				;;
		esac
		shift
	done
	
	# This really shouldn't ever detect a return of 1
	if ! _gce-set $NODE_DISTRO; then
		echo "Aborting cluster $KUBE_DO."
		return 1
	fi

	echo "Bringing cluster [$KUBE_DO]"
	case "$KUBE_DO" in
		"up")   
			#echo "DEBUG - do kube-up.sh"
			$KPATH/cluster/kube-up.sh
			;;
		"down") 
			#echo "DEBUG - do kube-down.sh"
			$KPATH/cluster/kube-down.sh
			;;
		*)
			echo "Please select a cluster action [up|down]"
			return 1
	esac
}

function gke-do {
	_gke-set

	local cmd=$1

	case "$cmd" in
		"up")
			$KPATH/cluster/kube-up.sh
			;;
		"down")
			$KPATH/cluster/kube-down.sh
			;;
		*)
			echo "Invalid operation"
			;;
	esac
}

